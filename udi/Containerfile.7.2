ARG BUILDER_IMAGE
FROM ${BUILDER_IMAGE}

LABEL "io.openshift.s2i.build.image"="${BUILDER_IMAGE}" \
      "io.openshift.s2i.build.commit.author"="cvicens <carlos.vicens.alonso@gmail.com>"

ENV ARGOCD_VERSION=v2.7.4
ENV OC_VERSION=4.12.25

USER root

# Copy the build arguments file into the image
COPY subscription-credentials.txt /tmp/subscription-credentials.txt

# Register your system and enable repositories
RUN source /tmp/subscription-credentials.txt && \
    subscription-manager register --username="${USERNAME}" --password="${PASSWORD}" --auto-attach && \
    subscription-manager repos --enable=rhel-7-server-rpms && \
    subscription-manager repos --enable=rhel-7-server-optional-rpms && \
    subscription-manager repos --enable=rhel-7-server-extras-rpms && \
    subscription-manager repos --enable=rhel-7-server-supplementary-rpms && \
    subscription-manager repos --enable=rhel-7-server-thirdparty-oracle-java-rpms

RUN \
    yum -y -q install --setopt=tsflags=nodocs \
        nodejs npm nodejs-nodemon nss_wrapper \
        make cmake gcc gcc-c++ \
            llvm-toolset clang clang-libs clang-tools-extra git-clang-format gdb \
        jq \
        podman buildah skopeo fuse-overlayfs \
        git openssl-devel ca-certificates \
        rsync \
        && \
        yum -y -q reinstall shadow-utils && \
        # fetch CVE updates (can exclude rpms to prevent update, eg., --exclude=odo)
        yum -y -q update && \
        yum -y -q clean all --enablerepo='*' && \
        yum -y -q clean all && rm -rf /var/cache/yum && \
        mkdir -p /opt && \
        # add user and configure it
        useradd -u 1000 -G wheel,root -d /home/user --shell /bin/bash -m user && \
        # Setup $PS1 for a consistent and reasonable prompt
        echo "export PS1='\W \`git branch --show-current 2>/dev/null | sed -r -e \"s@^(.+)@\(\1\) @\"\`$ '" >> "${HOME}"/.bashrc && \
        # Change permissions to let any arbitrary user
        mkdir -p /projects && \
        for f in "${HOME}" "/etc/passwd" "/etc/group" "/projects"; do \
            echo "Changing permissions on ${f}" && chgrp -R 0 ${f} && \
            chmod -R g+rwX ${f}; \
        done

RUN curl -o /tmp/argocd -L https://github.com/argoproj/argo-cd/releases/download/${ARGOCD_VERSION}/argocd-linux-amd64 && cd /usr/bin && cp /tmp/argocd . && chmod a+x /usr/bin/argocd && rm -f /tmp/argocd
RUN curl -o /tmp/oc.tar.gz -L https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/${OC_VERSION}/openshift-client-linux-${OC_VERSION}.tar.gz && cd /usr/bin && tar -xvzf /tmp/oc.tar.gz && chmod a+x /usr/bin/oc && chmod a+x /usr/bin/kubectl && rm -f /tmp/oc.tar.gz

RUN chgrp -R 0 /var/lib/alternatives && chmod -R g+rwX /var/lib/alternatives

ADD entrypoint.sh /entrypoint.sh

USER jboss

ENV GIT_REPO=/opt/eap
WORKDIR ${GIT_REPO}
RUN git init && \
    git config --global --add safe.directory $GIT_REPO && \
    git config --global user.name "kitchensink" && \
    git config --global user.email "kitchensink@example.com"

RUN git add . && git commit -a -m "reset point" && \
    chgrp -R 0 $GIT_REPO/.git && chmod -R ag=u $GIT_REPO/.git

ENTRYPOINT [ "/entrypoint.sh" ]
WORKDIR /projects
CMD tail -f /dev/null